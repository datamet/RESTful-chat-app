{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/stores/auth.js","../../src/stores/activeRoom.js","../../node_modules/svelte-routing/src/contexts.js","../../node_modules/svelte-routing/src/history.js","../../node_modules/svelte-routing/src/utils.js","../../node_modules/svelte-routing/src/Router.svelte","../../../client/lib/api.js","../../../client/lib/config.js","../../../client/lib/state.js","../../../client/lib/fresh.js","../../../client/lib/ws.js","../../../client/middleware/contentType.js","../../../client/middleware/fetch.js","../../../client/client.js","../../../client/middleware/authenticator.js","../../../client/middleware/responseHandler.js","../../../client/api/endpoints.js","../../node_modules/svelte/transition/index.mjs","../../src/components/Button.svelte","../../src/components/DropdownForm.svelte","../../src/components/Userinfo.svelte","../../src/components/Header.svelte","../../src/components/RoomsList.svelte","../../src/components/Sidepanel.svelte","../../../client/bot/service.js","../../../client/bot/mastermind.js","../../../client/bot/bot.js","../../src/components/AddBot.svelte","../../src/components/UserList.svelte","../../src/components/Feed.svelte","../../src/components/Chat.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.37.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store'\n\nfunction createAuth() {\n    const token = localStorage.getItem('auth') ? localStorage.getItem('auth') : ''\n\tconst { subscribe, set, update } = writable(token);\n\n\treturn {\n\t\tsubscribe,\n\t\tset: (value) => {\n            set(value)\n            localStorage.setItem('auth', value)\n        }\n\t};\n}\n\nexport const auth = createAuth();\n\nfunction createUser() {\n    const token = localStorage.getItem('user') ? localStorage.getItem('user') : ''\n\tconst { subscribe, set, update } = writable(token);\n\n\treturn {\n\t\tsubscribe,\n\t\tset: (value) => {\n            set(value)\n            localStorage.setItem('user', value)\n        }\n\t};\n}\n\nexport const user = createUser();","import { writable } from 'svelte/store'\n\nexport const room = writable(null)","export const LOCATION = {};\nexport const ROUTER = {};\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nfunction getLocation(source) {\n  return {\n    ...source.location,\n    state: source.history.state,\n    key: (source.history.state && source.history.state.key) || \"initial\"\n  };\n}\n\nfunction createHistory(source, options) {\n  const listeners = [];\n  let location = getLocation(source);\n\n  return {\n    get location() {\n      return location;\n    },\n\n    listen(listener) {\n      listeners.push(listener);\n\n      const popstateListener = () => {\n        location = getLocation(source);\n        listener({ location, action: \"POP\" });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n\n      return () => {\n        source.removeEventListener(\"popstate\", popstateListener);\n\n        const index = listeners.indexOf(listener);\n        listeners.splice(index, 1);\n      };\n    },\n\n    navigate(to, { state, replace = false } = {}) {\n      state = { ...state, key: Date.now() + \"\" };\n      // try...catch iOS Safari limits to 100 pushState calls\n      try {\n        if (replace) {\n          source.history.replaceState(state, null, to);\n        } else {\n          source.history.pushState(state, null, to);\n        }\n      } catch (e) {\n        source.location[replace ? \"replace\" : \"assign\"](to);\n      }\n\n      location = getLocation(source);\n      listeners.forEach(listener => listener({ location, action: \"PUSH\" }));\n    }\n  };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n  let index = 0;\n  const stack = [{ pathname: initialPathname, search: \"\" }];\n  const states = [];\n\n  return {\n    get location() {\n      return stack[index];\n    },\n    addEventListener(name, fn) {},\n    removeEventListener(name, fn) {},\n    history: {\n      get entries() {\n        return stack;\n      },\n      get index() {\n        return index;\n      },\n      get state() {\n        return states[index];\n      },\n      pushState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        index++;\n        stack.push({ pathname, search });\n        states.push(state);\n      },\n      replaceState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        stack[index] = { pathname, search };\n        states[index] = state;\n      }\n    }\n  };\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = Boolean(\n  typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n);\nconst globalHistory = createHistory(canUseDOM ? window : createMemorySource());\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nconst paramRe = /^:(.+)/;\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport function startsWith(string, search) {\n  return string.substr(0, search.length) === search;\n}\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isRootSegment(segment) {\n  return segment === \"\";\n}\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isDynamic(segment) {\n  return paramRe.test(segment);\n}\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nfunction isSplat(segment) {\n  return segment[0] === \"*\";\n}\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nfunction segmentize(uri) {\n  return (\n    uri\n      // Strip starting/ending `/`\n      .replace(/(^\\/+|\\/+$)/g, \"\")\n      .split(\"/\")\n  );\n}\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nfunction stripSlashes(str) {\n  return str.replace(/(^\\/+|\\/+$)/g, \"\");\n}\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nfunction rankRoute(route, index) {\n  const score = route.default\n    ? 0\n    : segmentize(route.path).reduce((score, segment) => {\n        score += SEGMENT_POINTS;\n\n        if (isRootSegment(segment)) {\n          score += ROOT_POINTS;\n        } else if (isDynamic(segment)) {\n          score += DYNAMIC_POINTS;\n        } else if (isSplat(segment)) {\n          score -= SEGMENT_POINTS + SPLAT_PENALTY;\n        } else {\n          score += STATIC_POINTS;\n        }\n\n        return score;\n      }, 0);\n\n  return { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nfunction rankRoutes(routes) {\n  return (\n    routes\n      .map(rankRoute)\n      // If two routes have the exact same score, we go by index instead\n      .sort((a, b) =>\n        a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n      )\n  );\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nfunction pick(routes, uri) {\n  let match;\n  let default_;\n\n  const [uriPathname] = uri.split(\"?\");\n  const uriSegments = segmentize(uriPathname);\n  const isRootUri = uriSegments[0] === \"\";\n  const ranked = rankRoutes(routes);\n\n  for (let i = 0, l = ranked.length; i < l; i++) {\n    const route = ranked[i].route;\n    let missed = false;\n\n    if (route.default) {\n      default_ = {\n        route,\n        params: {},\n        uri\n      };\n      continue;\n    }\n\n    const routeSegments = segmentize(route.path);\n    const params = {};\n    const max = Math.max(uriSegments.length, routeSegments.length);\n    let index = 0;\n\n    for (; index < max; index++) {\n      const routeSegment = routeSegments[index];\n      const uriSegment = uriSegments[index];\n\n      if (routeSegment !== undefined && isSplat(routeSegment)) {\n        // Hit a splat, just grab the rest, and return a match\n        // uri:   /files/documents/work\n        // route: /files/* or /files/*splatname\n        const splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n        params[splatName] = uriSegments\n          .slice(index)\n          .map(decodeURIComponent)\n          .join(\"/\");\n        break;\n      }\n\n      if (uriSegment === undefined) {\n        // URI is shorter than the route, no match\n        // uri:   /users\n        // route: /users/:userId\n        missed = true;\n        break;\n      }\n\n      let dynamicMatch = paramRe.exec(routeSegment);\n\n      if (dynamicMatch && !isRootUri) {\n        const value = decodeURIComponent(uriSegment);\n        params[dynamicMatch[1]] = value;\n      } else if (routeSegment !== uriSegment) {\n        // Current segments don't match, not dynamic, not splat, so no match\n        // uri:   /users/123/settings\n        // route: /users/:id/profile\n        missed = true;\n        break;\n      }\n    }\n\n    if (!missed) {\n      match = {\n        route,\n        params,\n        uri: \"/\" + uriSegments.slice(0, index).join(\"/\")\n      };\n      break;\n    }\n  }\n\n  return match || default_ || null;\n}\n\n/**\n * Check if the `path` matches the `uri`.\n * @param {string} path\n * @param {string} uri\n * @return {?object}\n */\nfunction match(route, uri) {\n  return pick([route], uri);\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nfunction addQuery(pathname, query) {\n  return pathname + (query ? `?${query}` : \"\");\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nfunction resolve(to, base) {\n  // /foo/bar, /baz/qux => /foo/bar\n  if (startsWith(to, \"/\")) {\n    return to;\n  }\n\n  const [toPathname, toQuery] = to.split(\"?\");\n  const [basePathname] = base.split(\"?\");\n  const toSegments = segmentize(toPathname);\n  const baseSegments = segmentize(basePathname);\n\n  // ?a=b, /users?b=c => /users?a=b\n  if (toSegments[0] === \"\") {\n    return addQuery(basePathname, toQuery);\n  }\n\n  // profile, /users/789 => /users/789/profile\n  if (!startsWith(toSegments[0], \".\")) {\n    const pathname = baseSegments.concat(toSegments).join(\"/\");\n\n    return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n  }\n\n  // ./       , /users/123 => /users/123\n  // ../      , /users/123 => /users\n  // ../..    , /users/123 => /\n  // ../../one, /a/b/c/d   => /a/b/one\n  // .././one , /a/b/c/d   => /a/b/c/one\n  const allSegments = baseSegments.concat(toSegments);\n  const segments = [];\n\n  allSegments.forEach(segment => {\n    if (segment === \"..\") {\n      segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n}\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nfunction combinePaths(basepath, path) {\n  return `${stripSlashes(\n    path === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n  )}/`;\n}\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nfunction shouldNavigate(event) {\n  return (\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n  );\n}\n\nfunction hostMatches(anchor) {\n  const host = location.host\n  return (\n    anchor.host == host ||\n    // svelte seems to kill anchor.host value in ie11, so fall back to checking href\n    anchor.href.indexOf(`https://${host}`) === 0 ||\n    anchor.href.indexOf(`http://${host}`) === 0\n  )\n}\n\nexport { stripSlashes, pick, match, resolve, combinePaths, shouldNavigate, hostMatches };\n","<script>\n  import { getContext, setContext, onMount } from \"svelte\";\n  import { writable, derived } from \"svelte/store\";\n  import { LOCATION, ROUTER } from \"./contexts.js\";\n  import { globalHistory } from \"./history.js\";\n  import { pick, match, stripSlashes, combinePaths } from \"./utils.js\";\n\n  export let basepath = \"/\";\n  export let url = null;\n\n  const locationContext = getContext(LOCATION);\n  const routerContext = getContext(ROUTER);\n\n  const routes = writable([]);\n  const activeRoute = writable(null);\n  let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n  // If locationContext is not set, this is the topmost Router in the tree.\n  // If the `url` prop is given we force the location to it.\n  const location =\n    locationContext ||\n    writable(url ? { pathname: url } : globalHistory.location);\n\n  // If routerContext is set, the routerBase of the parent Router\n  // will be the base for this Router's descendants.\n  // If routerContext is not set, the path and resolved uri will both\n  // have the value of the basepath prop.\n  const base = routerContext\n    ? routerContext.routerBase\n    : writable({\n        path: basepath,\n        uri: basepath\n      });\n\n  const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n    // If there is no activeRoute, the routerBase will be identical to the base.\n    if (activeRoute === null) {\n      return base;\n    }\n\n    const { path: basepath } = base;\n    const { route, uri } = activeRoute;\n    // Remove the potential /* or /*splatname from\n    // the end of the child Routes relative paths.\n    const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n\n    return { path, uri };\n  });\n\n  function registerRoute(route) {\n    const { path: basepath } = $base;\n    let { path } = route;\n\n    // We store the original path in the _path property so we can reuse\n    // it when the basepath changes. The only thing that matters is that\n    // the route reference is intact, so mutation is fine.\n    route._path = path;\n    route.path = combinePaths(basepath, path);\n\n    if (typeof window === \"undefined\") {\n      // In SSR we should set the activeRoute immediately if it is a match.\n      // If there are more Routes being registered after a match is found,\n      // we just skip them.\n      if (hasActiveRoute) {\n        return;\n      }\n\n      const matchingRoute = match(route, $location.pathname);\n      if (matchingRoute) {\n        activeRoute.set(matchingRoute);\n        hasActiveRoute = true;\n      }\n    } else {\n      routes.update(rs => {\n        rs.push(route);\n        return rs;\n      });\n    }\n  }\n\n  function unregisterRoute(route) {\n    routes.update(rs => {\n      const index = rs.indexOf(route);\n      rs.splice(index, 1);\n      return rs;\n    });\n  }\n\n  // This reactive statement will update all the Routes' path when\n  // the basepath changes.\n  $: {\n    const { path: basepath } = $base;\n    routes.update(rs => {\n      rs.forEach(r => (r.path = combinePaths(basepath, r._path)));\n      return rs;\n    });\n  }\n  // This reactive statement will be run when the Router is created\n  // when there are no Routes and then again the following tick, so it\n  // will not find an active Route in SSR and in the browser it will only\n  // pick an active Route after all Routes have been registered.\n  $: {\n    const bestMatch = pick($routes, $location.pathname);\n    activeRoute.set(bestMatch);\n  }\n\n  if (!locationContext) {\n    // The topmost Router in the tree is responsible for updating\n    // the location store and supplying it through context.\n    onMount(() => {\n      const unlisten = globalHistory.listen(history => {\n        location.set(history.location);\n      });\n\n      return unlisten;\n    });\n\n    setContext(LOCATION, location);\n  }\n\n  setContext(ROUTER, {\n    activeRoute,\n    base,\n    routerBase,\n    registerRoute,\n    unregisterRoute\n  });\n</script>\n\n<slot></slot>\n","/**\n * Api handler\n */\n\nconst createRequest = middleware => (request) => {\n    const req = {\n        path: request.path || '/',\n        method: request.method || 'GET',\n        headers: request.headers || {},\n        body: request.body || {}\n    }\n    const tasks = [...middleware]\n    const promise = new Promise((resolve, reject) => {\n        const res = {\n            status: 200,\n            body: {},\n            err: (reason) => {\n                reject(reason)\n            },\n            end: () => {\n                resolve({ status: res.status, body: res.body })\n            }\n        }\n        \n        const next = (err) => {\n            if (!err) {\n                const task = tasks.shift()\n                if (task) task(req, res, next)\n            }\n        }\n\n        next()\n    })\n\n    return promise\n}\n\nexport default () => {\n    const middleware = []\n    const request = createRequest(middleware)\n\n    return {\n        use: (func) => middleware.push(func),\n        post: (path, obj) => request({path, method: 'POST', ...obj}),\n        get: (path, obj) => request({path, method: 'GET', ...obj}),\n        put: (path, obj) => request({path, method: 'PUT', ...obj}),\n        delete: (path, obj) => request({path, method: 'DELETE', ...obj})\n    }\n}","/**\n * Config file\n */\n\nlet env\n\nif(typeof process === 'object') env = 'node'\nelse env = 'browser'\n\nconst config = {\n    env,\n    push: env === 'node' ? process.env.PUSH || true : true,\n    host: env === 'node' ? process.env.HOST || 'localhost' : 'localhost',\n    port: env === 'node' ? process.env.PORT || 5000 : 5000,\n    wsport: env === 'node' ? process.env.WS_PORT || 5050 : 5050\n}\n\nexport default config","// let state = {}\n// let subscribers = []\n\nclass State {\n    state\n    subscribers\n\n    constructor() {\n        this.state = {}\n        this.subscribers = []\n    }\n\n    get() {\n        return {...this.state}\n    }\n\n    update(newState) {\n        this.state = { ...this.state, ...newState }\n        for (const subscriber of this.subscribers) {\n            subscriber({...this.state})\n        }\n    }\n\n    subscribe(subscriber) { \n        this.subscribers.push(subscriber)\n        return () => this.subscribers.splice(this.subscribers.indexOf(subscriber), 1)\n    }\n\n}\n\nexport default () => new State()\n\n// export default {\n//     get: () => {return {...state}},\n//     update: (newState) => {\n//         state = { ...state, ...newState }\n//         for (const subscriber of subscribers) {\n//             subscriber({...state})\n//         }\n//     },\n//     subscribe: (subscriber) => { \n//         subscribers.push(subscriber)\n//         return () => subscribers.splice(subscribers.indexOf(subscriber), 1)\n//     }\n// }\n\n","/**\n * Module that performs an async operation multiple times with a given interval\n * or whenever a push notification is recieved from the server.\n * Mostly used to fetch messages or other information on loop\n */\n\n// Fetches changes and does callback\nconst fetchBackend = async (func, callback, stop) => {\n    try {\n        const res = await func()\n        callback(res)\n    }\n    catch(err) {\n        console.log(\"Error while fetching. Stopping\")\n        console.log(err)\n        if (errCallback) errCallback()\n        stop()\n    }\n}\n\nclass Fresh {\n    subs\n    started\n\n    constructor() {\n        this.subs = new Map()\n        this.started = false\n\n        this.createStopper = id => () => {\n            this.subs.delete(id)\n            clearInterval(id)\n        }\n    \n        this.add = (interval, func, callback, errCallback) => {\n    \n            const id = setInterval(() => {\n                if (this.started) fetchBackend(func, callback, this.createStopper(id), errCallback)\n            }, interval)\n    \n            this.subs.set(id, { interval, func, callback, errCallback })\n            return this.createStopper(id)  \n        }\n    \n        this.update = () => {\n            for (const [id, { func, callback, errCallback }] of this.subs) {\n                fetchBackend(func, callback, this.createStopper(id), errCallback)\n            }\n        }\n    }\n\n}\n\n// const subs = new Map()\n\n// let started = false\n\n// // Fetches changes and does callback\n// const fetchBackend = async (func, callback, stop) => {\n//     try {\n//         const res = await func()\n//         callback(res)\n//     }\n//     catch(err) {\n//         console.log(\"Error while fetching. Stopping\")\n//         for (const [id, sub] of subs) console.log(sub.func, sub.callback, sub.interval)\n//         console.log(err)\n//         stop()\n//     }\n// }\n\n// const createStopper = id => () => {\n//     subs.delete(id)\n//     clearInterval(id)\n// }\n\n// const add = (interval, func, callback) => {\n\n//     const id = setInterval(() => {\n//         if (started) fetchBackend(func, callback, createStopper(id))\n//     }, interval)\n\n//     subs.set(id, { interval, func, callback })\n//     return createStopper(id)  \n// }\n\n// const update = () => {\n//     for (const [id, { func, callback }] of subs) {\n//         fetchBackend(func, callback, createStopper(id))\n//     }\n// }\n\nexport default () => new Fresh()","import environment from './config.js'\n\nconst browserWS = (url, { update, state }) => {\n    let ws\n    let notify = update\n\n    const createWebsocket = (url) => {\n        const ws = new WebSocket(url)\n\n        ws.onerror = (event) => {\n            console.log(event)\n            ws.close()\n        }\n\n        return ws\n    }\n\n    const handleMessage = (event) => {\n        notify()\n    }\n\n    state.subscribe(({ token }) => {\n        if (token && !ws) {\n            ws = createWebsocket(url)\n            ws.onopen = () => ws.send(token)\n            ws.onmessage = (event) => handleMessage(event)\n        }\n        else if (!token && ws) {\n            ws.close()\n            ws = null\n        }\n    })\n}\n\nconst nodeWS = (url, { SocketModule, update, state }) => {\n    let ws\n    let notify = update\n\n    const createWebsocket = (url, SocketModule) => {\n        const ws = new SocketModule(url)\n\n        ws.on('error', (event) => {\n            console.log(event)\n            ws.close()\n        })\n\n        return ws\n    }\n\n    const handleMessage = (event) => {\n        notify()\n    }\n\n    state.subscribe(({ token }) => {\n        if (token && !ws) {\n            ws = createWebsocket(url, SocketModule)\n            ws.on('open', () => ws.send(token))\n            ws.on('message', (event) => handleMessage(event))\n        }\n        else if (!token && ws) {\n            ws.close()\n            ws = null\n        }\n    })\n}\n\nexport default environment.env === 'browser' ? browserWS : nodeWS","/**\n * Content Type\n * \n * Responsible for adding content type to header\n */\n\nexport default (req, res, next) => {\n    if (req.method === 'POST' || req.method === 'PUT') req.headers['Content-Type'] = 'application/json'\n    next()\n}","/**\n * Fetching from server\n */\n\nimport environment from '../lib/config.js'\n\nlet config, http\n\n// Uses the browsers built in fetch api\nconst browserFetch = async (req, res, next) => {\n    try {\n        const { path, method, headers, body } = req\n        const response = await fetch(`http://${config.host}:${config.port}${path}`, {\n            method, \n            headers, \n            body: method === 'POST' || method == 'PUT' ? JSON.stringify(body) : null\n        })\n        \n        if (response.headers.get('Content-Type') === 'application/json; charset=utf-8') {\n            const data = await response.json()\n            res.status = response.status\n            res.body = data\n        }\n        else {\n            console.log(await response.text())\n        }\n        next()\n    }\n    catch(err) {\n        res.status = 408\n        res.body = { error: \"Could not connect to the server\" }\n        next()\n    }\n}\n\n// Uses the http module from the node api.\nconst nodeFetch = async (req, res, next) => {\n    try {\n        const { path, method, headers, body } = req\n        const data = JSON.stringify(body)\n        \n        const options = {\n            hostname: config.host,\n            port: config.port,\n            path,\n            method,\n            headers: {\n                ...headers,\n                'Content-Length': data.length\n            }\n        }\n        \n        const request = http.request(options, respons => {\n            res.status = respons.statusCode\n            \n            let data = ''\n            respons.on('data', d => {\n                data += d\n            })\n\n            respons.on('end', () => {\n                const body = JSON.parse(data)\n                res.body = body\n            \n                next()\n            })\n        })\n        \n        request.on('error', error => {\n            console.error(error)\n        })\n        \n        request.write(data)\n        request.end()\n    }\n    catch (err) {\n        res.status = 408\n        res.body = { error: \"Could not connect to the server\" }\n        next()\n    }\n} \n\n// Returns function that uses the browsers built in fetch module if running in the browser,\n// otherwise returns a function that takes node's http module as an argument to\n// be able to send http requests via node's api.\n// This had to be done because dynamic imports, still are under development\nexport default environment.env === 'browser' ? (options) => { config = options ; return browserFetch} : (options, httpModule) => { \n    http = httpModule\n    config = options\n    return nodeFetch \n}","/**\n * Client application\n * \n * This application is created to be able run in both the browser and in nodejs\n */\n\n// Imports\nimport endpoints from './api/endpoints.js'\nimport api from './lib/api.js'\nimport config from './lib/config.js'\nimport createState from './lib/state.js'\nimport createFresh from './lib/fresh.js'\nimport ws from './lib/ws.js'\n\nimport auth from './middleware/authenticator.js'\nimport contentType from './middleware/contentType.js'\nimport fetch from './middleware/fetch.js'\nimport responseHandler from './middleware/responseHandler.js'\n\nconst checkPush = async (client) => {\n    // Check if server has push notifications enabled\n    const res = await client.checkPush()\n\n    // Starting refetch sycle if push notifications are disabled\n    // by client or server\n    if (res.body.push === 'disabled' || !config.push) client.fresh.start()\n}\n\nexport default (options, httpModule, SocketModule) => {\n    // Throws error if http module not specified and running in node\n    if (!httpModule && config.env === 'node') throw new Error(\"Http module is required as input when running in node\")\n    \n    // Adding passed in config options to config file\n    if (typeof options === 'object') Object.assign(config, options)\n\n    // Creating rest interactor\n    const rest = api()\n\n    // Creating state instance\n    const state = createState()\n\n    // Telling what the rest interactor should use each time a request is sent\n    rest.use(auth(state))\n    rest.use(contentType)\n    rest.use(fetch(config, httpModule))\n    rest.use(responseHandler(state))\n\n    // Setting up server connecion with rest interactor\n    const client = endpoints(rest)\n    \n    // Appending modules to client\n    client.state = state\n    client.fresh = createFresh()\n\n    // Setup websocket connection\n    ws(`ws://${config.host}:${config.wsport}`, { SocketModule, update: client.fresh.update, state })\n\n    // Check if push notifications is enabled on server\n    checkPush(client)\n\n    return client\n}\n\n","/**\n * Authenticator\n * \n * Responsible for adding token to header\n */\n\nexport default state => (req, res, next) => {\n    // Exception for create user and login route\n    if ((req.path === '/api/users' || req.path === '/api/tokens') && req.method === 'POST') {\n        next()\n        return\n    }\n\n    const { token } = state.get()\n    if (token && typeof token === 'string') req.headers['Token'] = token\n\n    next()\n}","/**\n * Respons handler\n * \n * Responsible for handeling responses\n */\n\nexport default state => (req, res, next) => {\n    if (res.body.token && typeof res.body.token === 'string') state.update({ token: res.body.token })\n    if (res.body.message && res.body.message === 'Logged out') state.update({ token: null, userID: null })\n    if (res.body.message && res.body.message === 'User deleted') state.update({ token: null, userID: null })\n    if (res.body.error && res.body.error === 'Session not found') state.update({ token: null, userID: null })\n    if (res.body.userID && typeof res.body.userID === 'string') state.update({ userID: res.body.userID })\n\n    res.end()\n}","/**\n * API endpoints\n */\n\nconst routes = server => { return {\n    // User routes\n    register: (username, password) => server.post('/api/users', { body: { username, password }}),\n    registerBot: (username, password) => server.post('/api/users', { body: { username, password, bot: true }}),\n    getUsers: () => server.get('/api/users'),\n    getUser: (userID) => server.get(`/api/user/${userID}`),\n    deleteUser: (userID) => server.delete(`/api/user/${userID}`),\n\n    // // Token routes\n    login: (username, password) => server.post('/api/tokens', { body: { username, password }}),\n    getTokens: () => server.get('/api/tokens'),\n    extendToken: (tokenID) => server.post(`/api/token/${tokenID}`),\n    logout: (tokenID) => server.delete(`/api/token/${tokenID}`),\n\n    // // Chatroom routes\n    createRoom: (name) => server.post('/api/rooms', { body: { name }}),\n    getRooms: () => server.get('/api/rooms'),\n    getRoom: (roomID) => server.get(`/api/room/${roomID}`),\n    deleteRoom: (roomID) => server.delete(`/api/room/${roomID}`),\n\n    joinRoom: (roomID, user) => server.post(`/api/room/${roomID}/users`, { body: { user } }),\n    getUsersInRoom: (roomID) => server.get(`/api/room/${roomID}/users`),\n\n    getMessages: (roomID) => server.get(`/api/room/${roomID}/messages`),\n    postMessage: (roomID, userID, message) => server.post(`/api/room/${roomID}/${userID}/messages`, { body: { message } }),\n    getMessagesFromUser: (roomID, userID) => server.get(`/room/${roomID}/${userID}/messages`),\n    checkPush: () => server.get('/api/push')\n}}\n\nexport default (interactor) => {\n    return routes(interactor)\n}","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\n    export let action = () => {}, color = \"blue\"\n</script>\n\n<button class=\"{color}\" on:click={action}><slot/></button>\n\n<style>\n    button {\n        line-height: 2.7rem;\n        font-size: 1.5rem;\n        border-radius: .3rem;\n        background-color: rgb(60, 133, 216);\n        color: white;\n        border: none;\n        padding: .5rem 1.4rem;\n    }\n\n    .red {\n        background-color: #9C4242;\n    }\n</style>","<script>\n    import { getContext } from 'svelte'\n    import { fade } from 'svelte/transition'\n    import Cross from '../assets/cross.svelte'\n    import Button from './Button.svelte'\n\n    export let action = 'Register'\n    let open = false, error = ''\n    let username, password\n    let client = getContext('client')\n\n    const login = async () => {\n        const res = await client.login(username, password)\n        return res\n    }\n\n    const register = async () => {\n        const res = await client.register(username, password)\n        if (res.body.message) login()\n        return res\n    }\n\n\n    const submit = async () => {\n        const func = action === 'Register' ? register : login\n        let res = await func()\n        if (res.body.error) error = res.body.error\n        if (res.body.message) {\n            open = false\n            error = ''\n            username = ''\n            password = ''\n        }\n    }\n</script>\n\n<div class=\"dropdown\">\n    <Button action={() => open = true}>{action}</Button>\n    {#if open}\n        <div class=\"background\" on:click={() => open = false} in:fade={{duration:200}} out:fade={{duration:200}}>\n            <div class=\"modal\" on:click|stopPropagation>\n                <button on:click={() => open = false} class=\"cross\"><Cross /></button>\n                <h3>{action}</h3>\n                <form on:submit|preventDefault class=\"form\">\n                    <div class=\"form-group\">\n                        <label for=\"username\">Username:</label>\n                        <input id=\"username\" type=\"text\" bind:value={username}>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"password\">Password:</label>\n                        <input id=\"password\" type=\"password\" bind:value={password}>\n                    </div>\n                    <div class=\"error\">\n                        <p>{error}</p>\n                    </div>\n                    <Button action={submit}>{action}</Button>\n                </form>\n            </div>\n        </div>\n    {/if}\n</div>\n\n<style>\n    .form {\n        display: flex;\n        flex-direction: column;\n        gap: 1.8rem;\n    }\n\n    .dropdown {\n        position: relative;\n    }\n\n    .background {\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background-color: rgba(0, 0, 0, .1);\n        backdrop-filter: blur(10px);\n    }\n\n    .modal {\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        gap: 1.5rem;\n        background-color: white;\n        border: 1px solid lightgray;\n        border-radius: .5rem;\n        padding: 6rem 3.5rem 3rem 3.5rem;\n        width: 50rem;\n        max-width: 100%;\n    }\n\n    .cross {\n        background-color: transparent;\n        border: none;\n        margin: 0;\n        padding: 0;\n        position: absolute;\n        right: 3.5rem;\n        top: 3rem;\n        width: 2rem;\n    }\n\n    .error {\n        color: rgb(180, 47, 47);\n    }\n</style>","<script>\n    import { user } from '../stores/auth.js'\n    import { getContext } from 'svelte'\n\n    const client = getContext('client')\n    let username = ''\n\n    const getUser = async () => {\n        const res = await client.getUser($user)\n        if (res.body.user) username = res.body.user.username\n    }\n\n    getUser()\n</script>\n\n<p>You are logged in as {username}</p>\n\n<style>\n    p {\n        margin: 0;\n        padding: 0;\n    }\n</style>","<script>\n\timport { room } from '../stores/activeRoom.js'\n    import ChatIcon from '../assets/chat.svelte'\n    import DropdownForm from './DropdownForm.svelte'\n    import { auth } from '../stores/auth.js'\n    import { getContext } from 'svelte'\n    import Button from './Button.svelte'\n    import Userinfo from './Userinfo.svelte'\n\n    const client = getContext('client')\n\n    const logout = async () => {\n        const res = await client.logout($auth)\n    }\n\n</script>\n\n<header>\n\n    <div class=\"logo\">\n        <ChatIcon />\n        <h1>ChatApp</h1>\n    </div>\n\n    <div class=\"room-title\">\n        <h2>{ $room ? $room.name : '' }</h2>\n    </div>\n\n    <nav>\n        <ul>\n            {#if !$auth}\n                <li><DropdownForm action=\"Login\" /></li>\n                <li><DropdownForm action=\"Register\"/></li>\n            {:else}\n                <li><Userinfo /></li>\n                <li><Button action={logout}>Logout</Button></li>\n            {/if}\n        </ul>\n    </nav>\n\n</header>\n\n<style>\n    header {\n        background-color: #EFEFEF;\n        padding: 0 2rem;\n        height: 6rem;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        z-index: 1000;\n        position: relative;\n        box-shadow: 0 0 1rem 0 lightgray;\n    }\n\n    h1 {\n        margin: 0;\n        font-size: 2.4rem;\n        letter-spacing: .01em;\n    }\n\n    h2 {\n        font-size: 1.7rem;\n        font-weight: 400;\n    }\n\n    .logo {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n    }\n\n    ul {\n        display: flex;\n        align-items: center;\n        list-style-type: none;\n        margin: 0;\n        padding: 0;\n        gap: 2rem;\n    }\n</style>","<script>\n    import { room } from '../stores/activeRoom.js'\n    import { getContext, onMount, onDestroy } from 'svelte'\n    import { user } from '../stores/auth.js'\n    import Button from './Button.svelte'\n    import HomeIcon from '../assets/home.svelte'\n\n    const client = getContext('client')\n    let joinedRooms = []\n    let otherRooms = []\n    let selected = ''\n    let newRoomName\n    let createRoomError = ''\n\n    const joinRoom = async (roomID, userID) => {\n        const res = await client.joinRoom(roomID, userID)\n        if (res.body.message) getRooms()\n    }\n\n    const createRoom = async () => {\n        const res = await client.createRoom(newRoomName)\n        if (res.body.message) {\n            createRoomError = ''\n            newRoomName = ''\n        }\n        else createRoomError = res.body.error\n    }\n\n    const viewRoom = async (roomID) => {\n        selected = roomID\n        const res = await client.getRoom(roomID)\n        if (res.body.room) room.set(res.body.room)\n        else room.set(null)\n    }\n\n    const updateRooms = (res) => {\n        if (res.body.rooms) {\n            const joined = []\n            const other = []\n            for (const room of res.body.rooms) {\n                if (room.joined) joined.push(room)\n                else other.push(room)\n                console.log(room.id, selected)\n            }\n            joinedRooms = joined\n            otherRooms = other\n        }\n    }\n\n    const getRooms = async () => {\n        const res = await client.getRooms()\n        updateRooms(res)\n        // if (selected) {\n        //     const res = await client.getRoom(roomID)\n        //     if (res.body.room) room.set(res.body.room)\n        //     else room.set(null)\n        // }\n    }\n\n    let stopUpdate\n    onMount(() => {\n        stopUpdate = client.fresh.add(3000, () => client.getRooms(), updateRooms)\n    })\n\n    onDestroy(() => {\n        stopUpdate()\n    })\n\n    room.subscribe(() => getRooms())\n</script>\n\n<div class=\"joined-rooms\">\n    <p class=\"title\">Joined rooms:</p>\n    {#if joinedRooms.length > 0}\n        {#each joinedRooms as room (room.id)}\n            <button class=\"room-button\" on:click={() => viewRoom(room.id)}>\n                <div class=\"room {room.id === selected ? 'selected' : ''}\">\n                    <div class=\"room-title\">\n                        <HomeIcon />\n                        <h3 class=\"room-name\">{room.name}</h3>\n                    </div>\n                </div>\n            </button>\n        {/each}\n    {:else}\n        <p class=\"placeholder\">You haven't joined any rooms</p>\n    {/if}\n</div>\n<div class=\"otherRooms\">\n    <p class=\"title\">Other rooms:</p>\n    {#if otherRooms.length > 0}\n        {#each otherRooms as room (room.id)}\n            <div class=\"room\">\n                <div class=\"room-title\">\n                    <HomeIcon />\n                    <h3 class=\"room-name\">{room.name}</h3>\n                </div>\n                <button class=\"room-action\" on:click={() => joinRoom(room.id, $user)}>Join</button>\n            </div>\n        {/each}\n    {:else}\n        <p class=\"placeholder\">There are no rooms you haven't joined</p>\n    {/if}\n</div>\n<div class=\"new-room\">\n    <div>\n        <label for=\"room-name\">New room name:</label>\n        <input type=\"text\" id=\"room-name\" bind:value={newRoomName}>\n        <p class=\"error\">{createRoomError}</p>\n    </div>\n    <Button action={createRoom}>Create Room +</Button>\n</div>\n\n<style>\n    .room {\n        height: 7rem;\n        display: flex;\n        align-items: center;\n        padding: 0 2rem;\n        margin: .3rem 0;\n        border-radius: .3rem;\n        transition: all linear .2s;\n        justify-content: space-between;\n    }\n\n    .room:hover {\n        background-color: #dbdbdb;\n    }\n\n    .room-button {\n        background-color: none;\n        border: none;\n        border-radius: 0;\n        margin: 0;\n        padding: 0;\n        display: block;\n        width: 100%;\n    }\n\n    .new-room {\n        display: flex;\n        flex-direction: column;\n        gap: 1.5rem;\n    }\n\n    .room-name {\n        color: #333;\n        padding-top: .2rem;\n        font-size: 1.6rem;\n    }\n\n    .selected {\n        background-color: #dbdbdb;\n    }\n\n    button:focus {\n        outline: none;\n    }\n\n    .error {\n        color: #a35353;\n    }\n\n    .room-title {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n    }\n\n    .room-action {\n        border: none;\n        background-color: #3C85D8;\n        color: white;\n        border-radius: .3rem;\n        height: 2.5rem;\n        padding: 0 1rem;\n        display: none;\n    }\n\n    .room:hover .room-action {\n        display: block;\n    }\n\n    .placeholder {\n        color: gray;\n    }\n</style>","<script>\n    import { auth } from '../stores/auth.js'\n    import RoomsList from './RoomsList.svelte'\n    \n</script>\n\n<aside>\n    {#if $auth}\n        <RoomsList />\n    {:else}\n        <div class=\"login-message\">\n            <p>Log in to view rooms...</p>\n        </div>\n    {/if}\n</aside>\n\n<style>\n    aside {\n        padding: 2rem;\n        display: flex;\n        flex-direction: column;\n        gap: 2rem;\n        width: 34rem;\n        background-color: rgb(243, 243, 243);\n        overflow-y: scroll;\n        box-shadow: 0 0 1rem 0 lightgray;\n        position: relative;\n        z-index: 100;\n    }\n\n    aside::-webkit-scrollbar {\n        display: none;\n    }\n\n    .login-message {\n        height: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n</style>","const botnames = [\"Olav\", \"Iselin\", \"Magnus\", \"Mari\", \"Oliver\", \"Tobias\"];\nconst password = [\"Olav1234\", \"Iselin1234\", \"Magnus1234\", \"Mari1234\", \"Oliver1234\", \"Tobias1234\"];\n\nexport default () => {\n    const i = Math.floor(Math.random() * botnames.length)\n    return {\n        username: botnames[i],\n        password: password[i]\n    };\n}","const activate = [\n    [\"anyone here?\", \"who is here?\", \"how are you doing\", \"i am here!\", \"am I alone here?\"],\n    [\"i have to leave!\", \"i will be back soon\", \"have a nice day, bye!\", \"i have to go\"],\n    [\"I'm listening...\", \"Go on...\", \"Continue\", \"Haha\", \"Same\", \"Try again\", \"I dont understand\", \"Omg!\", \"Bro...\"],\n    [\"hello\", \"hi\", \"hey\"],\n    [\"who are you\", \"your name\"],\n    [\"how are you\", \"how are things\"],\n    [\"what is going on\", \"what is up\"],\n    [\"happy\", \"good\", \"well\", \"fantastic\", \"cool\"],\n    [\"bad\", \"bored\", \"tired\", \"sad\"],\n    [\"story\", \"joke\"],\n    [\"thanks\", \"thank you\"],\n    [\"bye\", \"good bye\", \"goodbye\"]\n];\n\nconst reply = [\n    [\"Yes, I am here!\", \"For now\", \"I am here, and I am good thanks\"],\n    [\"Ok\", \"See you soon\", \"Text you later\", \"Have a nice day\"],\n    [\"What makes you happy?\", \"Tell a joke\"],\n    [\"Hello!\", \"How are you\", \"Good to see you\", \"Hello there!\"],\n    [\"My name is [username]\", \"I am a bot with username [username]\"],\n    [\"Fine... how are you?\", \"Pretty well, how are you?\", \"Fantastic, how are you?\"],\n    [\"Nothing much\", \"Exciting things!\"],\n    [\"Glad to hear!\"],\n    [\"Why?\", \"Cheer up buddy\"],\n    [\"What about?\", \"Once upon a time...\", \"Don't have time, sorry!\"],\n    [\"You're welcome\", \"You owe me one!\", \"No problem\"],\n    [\"Goodbye\", \"See you later\", \"See you soon\"]\n];\n\nconst alternative = [\n    \"I'm listening...\",\n    \"Go on...\",\n    \"Continue\",\n    \"Haha\",\n    \"Same\",\n    \"Try again\",\n    \"I dont understand\",\n    \"Omg!\",\n    \"Bro...\"\n];\n\nconst starters = [\n    \"Anyone here?\",\n    \"Hello\",\n    \"Who is here?\",\n    \"How are you doing\",\n    \"I am here!\",\n    \"Am I alone here?\"\n];\n\nconst enders = [\"I have to leave!\",\n    \"I will be back soon\",\n    \"Have a nice day, bye!\",\n    \"I have to go\"\n];\n\nconst compare = (text, bot) => {\n    for (let i = 0; i < activate.length; i++) {\n        for (let j = 0; j < activate[i].length; j++) {\n            if (text.includes(activate[i][j])) {\n                let items = reply[i];\n                return items[Math.floor(Math.random() * items.length)];\n            }\n        }\n    }\n    return null;\n}\n\nconst starter = () => {\n    return starters[Math.floor(Math.random() * starters.length)];\n}\n\nconst ender = () => {\n    return enders[Math.floor(Math.random() * starters.length)];\n}\n\nexport default username => (input, end) => {\n    if (end) {\n        return ender();\n    }\n    if (!input) {\n        return starter();\n    }\n\n    let text = input.message.toLowerCase()\n\n    let response = compare(text);\n    let msg = response ? response : alternative[Math.floor(Math.random() * alternative.length)]\n    return response.replace(\"[username]\", username)\n}","import randomebot from \"./service.js\"\nimport mastermind from \"./mastermind.js\";\n\nclass Bot {\n    client\n    options\n    username\n    password\n    roomID\n    userID\n    loopID\n    mastermind\n\n    unresponsive = 0\n    messages = [{ sender: \"\", message: \"\" }]\n    messageSentCounter = 0\n    numberOfMessages\n    lastMessage = { sender: \"\", message: \"\" }\n    lastMessageTime\n\n    constructor(client, options) {\n        let { username, password } = randomebot();\n        if (options.name) username = options.name\n        this.client = client;\n        this.options = options ? options : {};\n        this.username = username;\n        this.password = password;\n        this.numberOfMessages = Math.floor(Math.random() * (30 - 10 + 1) + 10);\n        this.mastermind = mastermind(this.username);\n    }\n\n    async start() {\n        let res = await this.client.registerBot(this.username, this.password)\n        if (res.body.message === 'User created') {\n            res = await this.client.login(this.username, this.password);\n            if (res.body.message === 'Logged in') {\n                this.userID = this.client.state.get().userID;\n                try {\n                    await this.joinRoom();\n                }\n                catch (err) {\n                    this.shutdown()\n                    return\n                }\n                this.loop()\n                return\n            }\n        }\n        this.shutdown()\n    }\n\n    async joinRoom() {\n        const roomToJoin = this.options.room ? this.options.room : \"Botroom\";\n\n        let res = await this.client.getRooms()\n        for (const room of res.body.rooms) {\n            if (room.name === roomToJoin) {\n                await this.client.joinRoom(room.id, this.userID);\n                this.roomID = room.id;\n                return;\n            }\n        }\n\n        await this.client.createRoom(roomToJoin);\n        res = await this.client.getRooms()\n\n        for (const room of res.body.rooms) {\n            if (room.name === roomToJoin) {\n                this.roomID = room.id;\n                this.admin = true\n                return;\n            }\n        }\n    }\n\n    loop() {\n        const stop = this.client.fresh.add(1000, () => this.client.getMessages(this.roomID), this.updateMessages, this.shutdown);\n        this.lastMessageTime = Date.now();\n        this.sendDelay(this.mastermind())\n        const id = setInterval(() => {\n            const lastMessageInRoom = this.messages[this.messages.length - 1] || { sender: \"\", message: \"\" }\n            // Checking for new message\n            if (this.lastMessage.message !== lastMessageInRoom.message && lastMessageInRoom.sender !== this.username) {\n                // Checking if bot has been alive too long\n                if (this.messageSentCounter === this.numberOfMessages) {\n                    this.shutdown(stop, id)\n                    return\n                }\n\n                // Updating last message\n                this.lastMessageTime = Date.now();\n                this.lastMessage = lastMessageInRoom\n\n                // Sending response\n                this.sendDelay(this.mastermind(lastMessageInRoom, false))\n            } else {\n                // Checkin time since last message\n                if (Date.now() - this.lastMessageTime > 30_000) {\n                    // Sending conversation starter\n                    this.unresponsive += 1\n                    if (this.unresponsive === 2) {\n                        this.shutdown() \n                        return\n                    }\n                    this.sendDelay(this.mastermind(\"\", false));\n                    this.lastMessageTime = Date.now()\n                }\n            }\n        }, 500)\n        this.stopFresh = stop\n        this.loopID = id\n    }\n\n    shutdown = async (reason) => {\n        if (this.loopID) clearInterval(this.loopID)\n        if (this.stopFresh) this.stopFresh();\n        if (reason !== 'server down') {\n            if (this.roomID) this.send(this.mastermind(\"\", true))\n            if (!this.admin) this.deregister()\n            else this.logout()\n        }\n    }\n\n    updateMessages = (res) => {\n        this.messages = res.body.messages;\n    }\n\n    send(message) {\n        this.messageSentCounter += 1\n        const postMessage = async () => {\n            const res = await this.client.postMessage(this.roomID, this.userID, message)\n            if (res.body.error) this.shutdown(\"server down\")\n        }\n        postMessage()\n    }\n\n    sendDelay(message) {\n        let timeout = Math.floor(Math.random() * (10 - 3 + 1) + 3);\n        setTimeout(() => {\n            this.send(message)\n        }, timeout);\n    }\n\n    async deregister() {\n        await this.client.deleteUser(this.userID)\n    }\n\n    async logout() {\n        await this.client.logout(this.client.state.get().token)\n    }\n}\n\nexport default (client, options) => {\n    return new Bot(client, options)\n}","<script>\n    import Button from './Button.svelte'\n    import { getContext } from 'svelte';\n    import createBot from '../../../client/bot/bot.js'\n    import connection from '../../../client/client.js'\n    import { room as activeRoom } from '../stores/activeRoom.js'\n\n    export let room\n    const host = getContext('host')\n    const port = getContext('port')\n    const client = getContext('client')\n    let name = ''\n    let createBotError = ''\n\n    const addBot = async () => {\n        const res = await client.getUsers()\n        if (res.body.users) {\n            if (!name || name.length < 3) {\n                createBotError = \"Name must be 3 characters or longer\"\n                return\n            }\n            for (const user of res.body.users) {\n                if (user.username === name) {\n                    createBotError = \"A bot or user with that name allready exists\"\n                    return\n                }\n            }\n        }\n        const botClient = connection({ host, port })\n        const bot = createBot(botClient, { room, name })\n        bot.start()\n\n        createBotError = ''\n        name = ''\n    }\n</script>\n\n<div class=\"add-bot\">\n    <div>\n        <label for=\"room-name\">New bot name:</label>\n        <input type=\"text\" id=\"room-name\" bind:value={name}>\n        <p class=\"error\">{createBotError}</p>\n    </div>\n    <Button action={addBot}>Add {name ? name : 'bot'} to {$activeRoom.name} +</Button>\n</div>\n<style>\n    .add-bot {\n        display: flex;\n        flex-direction: column;\n    }\n\n    .error {\n        color: #a35353;\n    }\n</style>","<script>\n    import { room } from '../stores/activeRoom.js'\n    import { onMount, getContext, onDestroy } from 'svelte'\n    import PersonIcon from '../assets/person.svelte'\n    import BotIcon from '../assets/bot.svelte'\n\n    const client = getContext('client')\n    let users = []\n    let stopFetch\n\n    const updateUsers = (res) => {\n        if (res.body.users) users = res.body.users\n    }\n\n    const getUsers = async () => {\n        if ($room) {\n            const res = await client.getUsersInRoom($room.id)\n            updateUsers(res)\n        }\n    }\n\n    const freshUsers = async () => {\n        stopFetch = client.fresh.add(3000, () => client.getUsersInRoom($room.id), updateUsers)\n    }\n\n    onMount(() => {\n        getUsers()\n        freshUsers()\n    })\n\n    const unsub = room.subscribe(room => getUsers())\n\n    onDestroy(() => {\n        stopFetch()\n        unsub()\n    })\n\n</script>\n\n<ul>\n    {#each users as user (user.id)}\n        <li>\n            <div class=\"user-name\">\n                {#if user.bot}\n                    <BotIcon />\n                {:else}\n                    <PersonIcon />\n                {/if}\n                <p>{user.username}</p>\n            </div>\n            {#if user.id === $room.admin && user.id === client.state.get().userID}\n                <p class=\"admin\">(admin/you)</p>\n            {:else if user.id === $room.admin}\n                <p class=\"admin\">(admin)</p>\n            {:else if user.id === client.state.get().userID}\n                <p class=\"admin\">(you)</p>\n            {/if}\n        </li>\n    {/each}\n</ul>\n\n<style>\n    ul {\n        list-style-type: none;\n        padding: 0;\n        margin: 0;\n    }\n\n    li {\n        display: flex;\n        border-radius: .3rem;\n        padding: 1rem 2rem;\n        justify-content: space-between;\n        transition: all .2s linear;\n    }\n\n    li:hover {\n        background-color: #DBDBDB;\n    }\n\n    .admin {\n        font-weight: 700;\n    }\n\n    .user-name {\n        display: flex;\n        gap: 1rem;\n        align-items: center;\n    }\n</style>","<script>\n    import SendIcon from '../assets/send.svelte'\n    import { user } from '../stores/auth.js'\n    import { getContext, onMount, onDestroy } from 'svelte'\n    import { room } from '../stores/activeRoom.js'\n    import AddBot from './AddBot.svelte'\n    import UserList from './UserList.svelte'\n    import Button from './Button.svelte'\n\n    let messages = []\n    let newMessage = ''\n    let client = getContext('client')\n    let stopFresh\n    let feed\n\n    const updateFeed = (res) => {\n        if (res.body.messages) messages = res.body.messages\n        let height = 20\n        for (const message of feed.children) {\n            height += message.clientHeight\n            height += 20\n        }\n        setTimeout(() => feed.scrollTop = height, 50)\n    }\n\n    const getMessages = async () => {\n        if ($room) {\n            const res = await client.getMessages($room.id)\n            updateFeed(res)\n        }\n    }\n\n    const freshMessages = async () => {\n        stopFresh = client.fresh.add(3000, () => client.getMessages($room.id), updateFeed)\n    }\n\n    const sendMessage = async () => {\n        if (!newMessage) return\n        const res = await client.postMessage($room.id, $user, newMessage)\n        if (res.body.message) {\n            newMessage = ''\n        }\n    }\n\n    const deleteRoom = async () => {\n        const res = await client.deleteRoom($room.id)\n        if (res.body.message) $room = null\n    }\n\n    onMount(() => {\n        getMessages()\n        freshMessages()\n    })\n\n    const unsubRoom = room.subscribe((room) => {\n        getMessages()\n    })\n\n    onDestroy(() => {\n        stopFresh()\n        unsubRoom()\n    })\n    \n</script>\n\n<div class=\"room\">\n    <div class=\"chat\">\n        <div class=\"feed\" bind:this={feed}>\n            {#each messages as message}\n                <div class=\"message\">\n                    <p class=\"author\">{message.sender}:</p>\n                    <div class=\"message-bubble\">\n                        <p class=\"message-text\">{message.message}</p>\n                    </div>\n                </div>\n            {/each}\n        </div>\n        <div class=\"message-input\">\n            <input on:keydown={(e) => { if(e.keyCode === 13) sendMessage() }} class=\"input-box\" placeholder=\"type message...\" type=\"text\" bind:value={newMessage} rows=\"3\">\n            <button on:click={sendMessage} disabled={newMessage.length === 0} class=\"send-button\"><SendIcon /></button>\n        </div>\n    </div>\n    <div class=\"metadata\">\n        {#if $room.admin === $user}\n            <div class=\"admin-actions\">\n                <p>Admin actions:</p>\n                <Button color=\"red\" action={deleteRoom}>Delete room</Button>\n            </div>\n        {/if}\n        <div>\n            <p>Users in room:</p>\n            <UserList />\n        </div>\n        <AddBot room={$room.name} />\n    </div>\n</div>\n\n<style>\n    .room {\n        display: flex;\n        width: 100%;\n        height: 100%;\n    }\n\n    .chat {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-end;\n        width: 100%;\n        position: relative;\n    }\n\n    .message-input {\n        display: flex;\n        gap: 2rem;\n        padding: 2rem;\n        border-top: 1px solid lightgray;\n        width: 100%;\n    }\n\n    .input-box {\n        resize: none;\n        padding: 1rem;\n        border: none;\n        background-color: #EFEFEF;\n        border-radius: .3rem;\n        width: 100%;\n    }\n\n    .input-box:focus {\n        outline: none;\n    }\n\n    .send-button {\n        border: none;\n        background-color: transparent;\n        color: #3C85D8;\n    }\n\n    .send-button:disabled {\n        color: lightgray;\n    }\n\n    .metadata {\n        background-color: #F3F3F3;\n        box-shadow: 0 0 1rem 0 lightgray;\n        width: 35rem;\n        padding: 2rem;\n        display: flex;\n        flex-direction: column;\n        gap: 2rem;\n        overflow-y: scroll;\n    }\n\n    .metadata::-webkit-scrollbar {\n        display: none;\n    }\n\n    .feed {\n        padding: 2rem;\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n        overflow-y: scroll;\n        scroll-behavior: smooth;\n    }\n\n    .feed::-webkit-scrollbar {\n        display: none;\n    }\n\n    .message {\n        display: flex;\n        gap: 1rem;\n        align-items: center;\n        justify-content: flex-start;\n    }\n\n    .author {\n        color: #333;\n        font-weight: 700;\n    }\n\n    .message-bubble {\n        color: #333;\n        border-radius: 1rem;\n        background-color: #EFEFEF;\n        padding: 1rem;\n    }\n\n    .message-text {\n        margin: 0;\n    }\n\n    .admin-actions {\n        display: flex;\n        flex-direction: column;\n    }\n</style>","<script>\n    import { room } from '../stores/activeRoom.js'\n    import Feed from './Feed.svelte'\n\n</script>\n\n{#if $room}\n    <Feed />\n{:else}\n    <div class=\"welcome-box\">\n        <h1>Welcome!</h1>\n        <div>\n            <p class=\"sub\">This is a chat room for humans and bots :)</p>\n            <p class=\"sub\">Register or login to access the chat rooms.</p>\n        </div>\n    </div>\n{/if}\n\n<style>\n    .welcome-box {\n        display: flex;\n        height: 100%;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .sub {\n        margin: .3rem;\n    }\n</style>","<script>\n\timport { auth, user } from './stores/auth.js'\n\timport { room } from './stores/activeRoom.js'\n\timport { onDestroy, onMount } from 'svelte'\n\timport { Router, Route, Link } from 'svelte-routing'\n\timport { setContext } from 'svelte'\n\timport connection from '../../client/client.js'\n\n\timport Header from './components/Header.svelte'\n\timport Sidepanel from './components/Sidepanel.svelte'\n\timport Chat from './components/Chat.svelte'\n\n\texport let url = \"\"\n\texport let host = window.location.hostname,\n\t\t\t   port = window.location.port\n\n\tconst client = connection({ host, port })\n\tsetContext('client', client)\n\tsetContext('host', host)\n\tsetContext('port', port)\n\n\tlet unsubscribe\n\tif ($auth) client.state.update({ token: $auth })\n\tif ($user) client.state.update({ userID: $user })\n\n\tonMount(() => {\n\t\tunsubscribe = client.state.subscribe((state) => {\n\t\t\tif (state.token && typeof state.token === 'string') auth.set(state.token)\n\t\t\telse {\n\t\t\t\tauth.set('')\n\t\t\t\troom.set(null)\n\t\t\t}\n\t\t\tif (state.userID && typeof state.userID === 'string') user.set(state.userID)\n\t\t\telse user.set('')\n\t\t})\n\t})\n\n\tonDestroy(() => {\n\t\tunsubscribe()\n\t})\n\n</script>\n\n<Router {url}>\t\t\n\t<Header />\n\n\t<div class=\"content\">\n\t\t<Sidepanel />\n\n\t\t<main>\n\t\t\t<Chat />\n\t\t</main>\n\t</div>\n</Router>\n\n<style>\n\t.content {\n\t\tdisplay: flex;\n\t\theight: calc(100vh - 6rem);\n\t\twidth: 100%;\n\t\tjustify-items: stretch;\n\t}\n\n\tmain {\n\t\theight: 100%;\n\t\twidth: 100%\n\t}\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\thost: 'localhost',\n\t\tport: '5000'\n\t}\n});\n\nexport default app;"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","null_to_empty","value","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","stop_propagation","stopPropagation","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","xlink_attr","setAttributeNS","set_data","wholeText","set_input_value","input","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","str","hash","charCodeAt","doc","ownerDocument","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","style","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","get_current_component","Error","onMount","on_mount","onDestroy","setContext","key","context","set","getContext","get","bubble","type","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","has","fragment","before_update","after_update","wait","then","dispatch","direction","kind","dispatchEvent","detail","e","createEvent","initCustomEvent","custom_event","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","d","null_transition","outro_and_destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","create_component","mount_component","customElement","new_on_destroy","map","destroy_component","detaching","make_dirty","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","index","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","auth","token","localStorage","getItem","setItem","createAuth","user","createUser","room","LOCATION","ROUTER","getLocation","source","location","state","history","globalHistory","listeners","listener","popstateListener","action","to","replace","replaceState","pushState","createHistory","Boolean","initialPathname","stack","pathname","search","states","entries","_","uri","createMemorySource","paramRe","isSplat","segment","segmentize","stripSlashes","rankRoute","route","score","default","path","reduce","isRootSegment","test","isDynamic","SEGMENT_POINTS","pick","routes","match","default_","uriPathname","uriSegments","isRootUri","ranked","sort","rankRoutes","missed","params","routeSegments","routeSegment","uriSegment","decodeURIComponent","dynamicMatch","exec","combinePaths","basepath","url","locationContext","routerContext","activeRoute","hasActiveRoute","base","routerBase","registerRoute","$base","_path","matchingRoute","$location","rs","unregisterRoute","bestMatch","$routes","middleware","request","req","method","headers","body","reject","res","status","err","reason","end","shift","createRequest","use","func","post","put","env","process","config","PUSH","host","HOST","port","PORT","wsport","WS_PORT","State","newState","fetchBackend","async","console","log","errCallback","Fresh","subs","started","createStopper","id","clearInterval","interval","setInterval","environment","ws","notify","WebSocket","onerror","close","createWebsocket","onopen","send","onmessage","SocketModule","on","http","browserFetch","response","fetch","JSON","stringify","json","error","nodeFetch","hostname","Content-Length","respons","statusCode","parse","write","httpModule","api","contentType","message","userID","responseHandler","client","server","register","username","password","registerBot","bot","getUsers","getUser","deleteUser","login","getTokens","extendToken","tokenID","logout","createRoom","getRooms","getRoom","roomID","deleteRoom","joinRoom","getUsersInRoom","getMessages","postMessage","getMessagesFromUser","checkPush","fresh","fade","easing","linear","getComputedStyle","opacity","css","color","preventDefault","animation_name","running","go","tick","start_time","end_time","abort","group","reset","open","$user","$auth","newRoomName","joinedRooms","otherRooms","selected","createRoomError","viewRoom","updateRooms","rooms","joined","other","stopUpdate","botnames","floor","random","activate","reply","starters","enders","j","includes","items","compare","toLowerCase","Bot","sender","randomebot","numberOfMessages","mastermind","shutdown","roomToJoin","admin","updateMessages","lastMessageTime","sendDelay","lastMessageInRoom","messages","lastMessage","messageSentCounter","unresponsive","stopFresh","loopID","deregister","timeout","setTimeout","createBotError","users","createBot","connection","stopFetch","updateUsers","$room","freshUsers","iterations","feed","newMessage","updateFeed","height","clientHeight","scrollTop","sendMessage","freshMessages","unsubRoom","keyCode"],"mappings":"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"}